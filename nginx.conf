server {
    listen 8080;
    server_name localhost;

    # 增加更详细的调试日志
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # 直接测试静态文件是否存在并可访问
    location = /debug {
        default_type text/plain;
        return 200 "
Debug info:
Server time: $time_iso8601
Document root: $document_root
Request: $request
Uri: $uri
Remote addr: $remote_addr
";
    }

    # 显示目录内容（仅用于调试）
    location = /list {
        autoindex on;
        autoindex_exact_size off;
        root /usr/share/nginx/html;
    }

    # Health check endpoint
    location /api/health {
        default_type application/json;
        return 200 '{"status":"success","message":"Service is healthy","data":{"version":"1.0.0","time":"$time_iso8601"}}';
    }

    # 处理OPTIONS请求 - 单独拆分出来避免冲突
    location /api/options {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' '0';
            return 204;
        }
        return 404;
    }

    # 处理根目录请求 - 明确指定index.html
    location = / {
        root /usr/share/nginx/html;
        try_files /index.html =404;
        add_header X-Debug-Path "$document_root/index.html" always;
        add_header X-Debug-Info "Exact root match" always;
    }

    # 处理静态文件
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html =404;
        
        # 添加调试头
        add_header X-Debug-Path "$document_root$uri" always;
        add_header X-Debug-Uri "$uri" always;
        add_header X-Debug-Root "$document_root" always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
    }
    
    # 自定义404页面
    error_page 404 = @404_json;
    
    location @404_json {
        default_type application/json;
        return 404 '{"status":"error","message":"Resource not found","path":"$request_uri","debugRoot":"$document_root"}';
    }
} 